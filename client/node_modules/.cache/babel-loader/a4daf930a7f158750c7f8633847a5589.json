{"ast":null,"code":"var _jsxFileName = \"/home/mausam/travnode/client/src/components/ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { v4 as uuidv4 } from 'uuid'; // uuidv4();\n\nimport { connect } from 'react-redux'; //allows us to basicaaly to get state from redux into react into a react component\n\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n  // state = {\n  //     items: [\n  //         { id: uuidv4(), name:\"egg\" },\n  //         { id: uuidv4(), name:\"milk\" },\n  //         { id: uuidv4(), name:\"meat\" },\n  //         { id: uuidv4(), name:\"proteins\" }\n  //     ]\n  // }\n  //now we r gonna call this getitems from the component using reducers so removing the states from the components coz we want it to come from our redux reducer our item reducer\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    // const { items } = this.state\n    //state from reducer component react and mapping the state to props\n    const {\n      items\n    } = this.props.item;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: \"2rem\"\n      },\n      onClick: () => {\n        const name = prompt('Enter the Item');\n\n        if (name) {\n          this.setState(state => ({\n            items: [...state.items, {\n              id: uuidv4(),\n              name\n            }]\n          }));\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Add Item\"), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, items.map(({\n      id,\n      name\n    }) => /*#__PURE__*/React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"primary\",\n      size: \"sm\",\n      onClick: () => {\n        this.setState(state => ({\n          items: state.items.filter(item => item.id !== id)\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, \"\\xD7\"), name))))));\n  }\n\n} //when you bring an action from redux to react its going to be stored as prop\n\n\nShoppingList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired //it respresents our state which is going to be object\n\n}; //when i say it represents our state it is a prop but we r mapping it from the state so we r mapping thos the redux state to a component property\n\nconst mapStateToProps = state => ({\n  item: state.item\n}); //mapStateToProps allows us to take our items state in this case thisis ourstate and we want to basically rturn this or map this into a component property sp that we can \n//use it in the shopping lists so we want to use it as this.props.items\n\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ShoppingList);","map":{"version":3,"sources":["/home/mausam/travnode/client/src/components/ShoppingList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","v4","uuidv4","connect","getItems","PropTypes","ShoppingList","componentDidMount","props","render","items","item","marginBottom","name","prompt","setState","state","id","map","filter","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import  React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport {CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { v4 as uuidv4 } from 'uuid';\n// uuidv4();\n\nimport { connect } from 'react-redux';    //allows us to basicaaly to get state from redux into react into a react component\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component\n{\n    // state = {\n    //     items: [\n    //         { id: uuidv4(), name:\"egg\" },\n    //         { id: uuidv4(), name:\"milk\" },\n    //         { id: uuidv4(), name:\"meat\" },\n    //         { id: uuidv4(), name:\"proteins\" }\n            \n    //     ]\n    // }\n\n//now we r gonna call this getitems from the component using reducers so removing the states from the components coz we want it to come from our redux reducer our item reducer\n\ncomponentDidMount()\n{\n    this.props.getItems();\n}\n\n\n\n\n\n\n\n\n\n    render()\n    {\n        // const { items } = this.state\n        //state from reducer component react and mapping the state to props\n        const { items } = this.props.item\n\n        return(\n            <Container>\n                <Button\n                color=\"dark\"\n                style={{ marginBottom: \"2rem\" }}\n                onClick={ () => {\n                    const name = prompt('Enter the Item');\n                    if(name)\n                    {\n                        this.setState(state => ({\n                            items: [...state.items, {id: uuidv4(), name}]\n                        }));\n                    }\n                } }\n                \n                >\n                    Add Item\n\n                </Button>\n\n                <ListGroup>\n                    <TransitionGroup className=\"shopping-list\">\n                        {items.map(({ id, name}) => (\n                            <CSSTransition key = {id} timeout={500} classNames=\"fade\">\n                                <ListGroupItem>\n                                    <Button\n                                    className=\"remove-btn\"\n                                    color=\"primary\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        this.setState(state => ({\n                                            items: state.items.filter(item => item.id !== id)\n                                        }));\n                                    }}                                    >\n                                        &times;\n                                    </Button>\n                                    { name }\n                                </ListGroupItem>\n\n                            </CSSTransition>\n                        ) )}\n                    </TransitionGroup>\n                </ListGroup>\n            </Container>\n\n        )\n    }\n}\n\n\n//when you bring an action from redux to react its going to be stored as prop\nShoppingList.propTypes = {\n    getItems: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired     //it respresents our state which is going to be object\n}\n\n//when i say it represents our state it is a prop but we r mapping it from the state so we r mapping thos the redux state to a component property\nconst mapStateToProps = (state) => ({\n    item: state.item\n});\n\n\n//mapStateToProps allows us to take our items state in this case thisis ourstate and we want to basically rturn this or map this into a component property sp that we can \n//use it in the shopping lists so we want to use it as this.props.items\nexport default connect(mapStateToProps,{ getItems })(ShoppingList);"]},"metadata":{},"sourceType":"module"}