{"ast":null,"code":"var _jsxFileName = \"/home/mausam/travnode/client/src/components/auth/RegisterModal.js\";\n//atlast importing this file on appNavbar.js to display there\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass RegisterModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); //close modal   \n\n      this.toggle();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"Name\" // className = \"mb-3\"\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      email: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: \"2rem\"\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Register\"))))));\n  }\n\n} //As far as the state that we want to bring in, we want to bring in the value of isAuthenticated, because once we register we want to close it if we r authenticated\n//another we want to add is errorState so that we can output the error message \n//and this auth and error , i am getting from reducer/index.js which will give us access to all the stuff within the state of the error and the auth reducer\n\n\nRegisterModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  // i am not going to do require because it can be null\n  error: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {})(RegisterModal);","map":{"version":3,"sources":["/home/mausam/travnode/client/src/components/auth/RegisterModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","connect","PropTypes","RegisterModal","state","modal","name","email","password","msg","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","render","marginTop","propTypes","isAuthenticated","bool","error","object","isRequired","mapStateToProps","auth"],"mappings":"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","sourcesContent":["//atlast importing this file on appNavbar.js to display there\n\n\nimport React,{ Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink\n} from 'reactstrap';\n\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nclass RegisterModal extends Component\n{\n    state = {\n        modal: false,\n        name: '',\n        email: '',\n        password: '',\n        msg: null\n    }\n\n\nstatic  propTypes = {\n    isAuthenticated: PropTypes.bool,         // i am not going to do require because it can be null\n    error: PropTypes.object.isRequired\n}\n \n\ntoggle = () => {\n       this.setState({\n           modal: !this.state.modal\n       });\n}\n\nonChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    });\n}\n\n\n\n//when we deal with the backend the mongodb itself creates an ID on its own but right now we have to create our own id so we bringing back again UUID\nonSubmit = e => {\n    e.preventDefault();\n\n   \n\n    //close modal   \n    this.toggle();\n}\n\n\n\n\nrender()\n{\n    return(\n        <div>\n\n            {/* <Button\n                color= \"dark\"\n                style ={{ marginBottom: '8rem' }}\n                onClick = { this.toggle }\n\n            \n            >Add Item\n            </Button> */}\n\n            <NavLink onClick={this.toggle} href='#'>\n                Register\n            </NavLink>\n\n            <Modal\n            isOpen = {this.state.modal}\n            toggle={this.toggle}\n            \n            >\n            <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n\n            <ModalBody>\n                <Form onSubmit = {this.onSubmit}>\n                    <FormGroup>\n                        <Label for=\"name\">\n                            Name\n                        </Label>\n                        <Input\n                        type = \"text\"\n                        name = \"name\"\n                        id=\"name\"\n                        placeholder = \"Name\"\n                        // className = \"mb-3\"\n                        onChange={this.onChange}\n                        >\n                        </Input>\n\n                        \n                        \n                        \n                        <Label for=\"email\">\n                            Email\n                        </Label>\n                        <Input\n                        type = \"email\"\n                        email = \"email\"\n                        id=\"email\"\n                        placeholder = \"Email\"\n                        onChange={this.onChange}\n                        >\n                        </Input>\n\n\n\n                        <Label for=\"password\">\n                            Password\n                        </Label>\n                        <Input\n                        type = \"password\"\n                        name = \"password\"\n                        id=\"password\"\n                        placeholder = \"Password\"\n                        onChange={this.onChange}\n                        >\n                        </Input>\n\n                        <Button color=\"dark\" style = {{marginTop:\"2rem\"}} block>\n                            Register\n\n                        </Button>\n                    </FormGroup>\n\n                </Form>\n            </ModalBody>\n            </Modal>\n\n        </div>\n    )\n}\n}\n\n\n//As far as the state that we want to bring in, we want to bring in the value of isAuthenticated, because once we register we want to close it if we r authenticated\n//another we want to add is errorState so that we can output the error message \n//and this auth and error , i am getting from reducer/index.js which will give us access to all the stuff within the state of the error and the auth reducer\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\n\nexport default connect(mapStateToProps, { }) (RegisterModal);\n"]},"metadata":{},"sourceType":"module"}